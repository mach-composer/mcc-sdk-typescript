/* tslint:disable */
/* eslint-disable */
/**
 * MACH composer Cloud (MCC) Public API
 * # Introduction  MACH composer Cloud is a platform and API to facilitate and coordinate work across teams that build composable architectures using MACH technology.  All operations available in MACH composer cloud are available through this API. For more information about using it in your MACH architecture, have a look at the [documentation website](https://docs.machcomposer.io/cloud/index.html). 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: mach@labdigital.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface JSONPatchRequestMoveCopy
 */
export interface JSONPatchRequestMoveCopy {
    /**
     * A JSON Pointer path.
     * @type {string}
     * @memberof JSONPatchRequestMoveCopy
     */
    path: string;
    /**
     * The operation to perform.
     * @type {string}
     * @memberof JSONPatchRequestMoveCopy
     */
    op: JSONPatchRequestMoveCopyOpEnum;
}


/**
 * @export
 */
export const JSONPatchRequestMoveCopyOpEnum = {
    Move: 'move',
    Copy: 'copy'
} as const;
export type JSONPatchRequestMoveCopyOpEnum = typeof JSONPatchRequestMoveCopyOpEnum[keyof typeof JSONPatchRequestMoveCopyOpEnum];


/**
 * Check if a given object implements the JSONPatchRequestMoveCopy interface.
 */
export function instanceOfJSONPatchRequestMoveCopy(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "path" in value;
    isInstance = isInstance && "op" in value;

    return isInstance;
}

export function JSONPatchRequestMoveCopyFromJSON(json: any): JSONPatchRequestMoveCopy {
    return JSONPatchRequestMoveCopyFromJSONTyped(json, false);
}

export function JSONPatchRequestMoveCopyFromJSONTyped(json: any, ignoreDiscriminator: boolean): JSONPatchRequestMoveCopy {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'path': json['path'],
        'op': json['op'],
    };
}

export function JSONPatchRequestMoveCopyToJSON(value?: JSONPatchRequestMoveCopy | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'path': value.path,
        'op': value.op,
    };
}

