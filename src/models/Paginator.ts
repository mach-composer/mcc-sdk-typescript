/* tslint:disable */
/* eslint-disable */
/**
 * MACH composer Cloud (MCC) Public API
 * # Introduction  MACH composer Cloud is a platform and API to facilitate and coordinate work across teams that build composable architectures using MACH technology.  All operations available in MACH composer cloud are available through this API. For more information about using it in your MACH architecture, have a look at the [documentation website](https://docs.machcomposer.io/cloud/index.html). 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: mach@labdigital.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Paginator
 */
export interface Paginator {
    /**
     * Number of items in the current page
     * @type {number}
     * @memberof Paginator
     */
    count: number;
    /**
     * Total number of items found
     * @type {number}
     * @memberof Paginator
     */
    total: number;
    /**
     * 
     * @type {number}
     * @memberof Paginator
     */
    offset: number;
    /**
     * 
     * @type {number}
     * @memberof Paginator
     */
    limit: number;
}

/**
 * Check if a given object implements the Paginator interface.
 */
export function instanceOfPaginator(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "count" in value;
    isInstance = isInstance && "total" in value;
    isInstance = isInstance && "offset" in value;
    isInstance = isInstance && "limit" in value;

    return isInstance;
}

export function PaginatorFromJSON(json: any): Paginator {
    return PaginatorFromJSONTyped(json, false);
}

export function PaginatorFromJSONTyped(json: any, ignoreDiscriminator: boolean): Paginator {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'count': json['count'],
        'total': json['total'],
        'offset': json['offset'],
        'limit': json['limit'],
    };
}

export function PaginatorToJSON(value?: Paginator | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'count': value.count,
        'total': value.total,
        'offset': value.offset,
        'limit': value.limit,
    };
}

