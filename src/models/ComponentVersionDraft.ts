/* tslint:disable */
/* eslint-disable */
/**
 * MCC Public API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ComponentVersionDraft
 */
export interface ComponentVersionDraft {
    /**
     * 
     * @type {string}
     * @memberof ComponentVersionDraft
     */
    component: string;
    /**
     * 
     * @type {string}
     * @memberof ComponentVersionDraft
     */
    version: string;
    /**
     * 
     * @type {string}
     * @memberof ComponentVersionDraft
     */
    branch: string;
}

/**
 * Check if a given object implements the ComponentVersionDraft interface.
 */
export function instanceOfComponentVersionDraft(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "component" in value;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "branch" in value;

    return isInstance;
}

export function ComponentVersionDraftFromJSON(json: any): ComponentVersionDraft {
    return ComponentVersionDraftFromJSONTyped(json, false);
}

export function ComponentVersionDraftFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComponentVersionDraft {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'component': json['component'],
        'version': json['version'],
        'branch': json['branch'],
    };
}

export function ComponentVersionDraftToJSON(value?: ComponentVersionDraft | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'component': value.component,
        'version': value.version,
        'branch': value.branch,
    };
}

