/* tslint:disable */
/* eslint-disable */
/**
 * MACH composer Cloud (MCC) Public API
 * # Introduction  MACH composer Cloud is a platform and API to facilitate and coordinate work across teams that build composable architectures using MACH technology.  All operations available in MACH composer cloud are available through this API. For more information about using it in your MACH architecture, have a look at the [documentation website](https://docs.machcomposer.io/cloud/index.html). 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: mach@labdigital.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrganizationUserInviteDataOrganization
 */
export interface OrganizationUserInviteDataOrganization {
    /**
     * 
     * @type {string}
     * @memberof OrganizationUserInviteDataOrganization
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof OrganizationUserInviteDataOrganization
     */
    name: string;
}

/**
 * Check if a given object implements the OrganizationUserInviteDataOrganization interface.
 */
export function instanceOfOrganizationUserInviteDataOrganization(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function OrganizationUserInviteDataOrganizationFromJSON(json: any): OrganizationUserInviteDataOrganization {
    return OrganizationUserInviteDataOrganizationFromJSONTyped(json, false);
}

export function OrganizationUserInviteDataOrganizationFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationUserInviteDataOrganization {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
    };
}

export function OrganizationUserInviteDataOrganizationToJSON(value?: OrganizationUserInviteDataOrganization | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
    };
}

