/* tslint:disable */
/* eslint-disable */
/**
 * MACH composer Cloud (MCC) Public API
 * # Introduction  MACH composer Cloud is a platform and API to facilitate and coordinate work across teams that build composable architectures using MACH technology.  All operations available in MACH composer cloud are available through this API. For more information about using it in your MACH architecture, have a look at the [documentation website](https://docs.machcomposer.io/cloud/index.html). 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: mach@labdigital.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OrganizationDraft
 */
export interface OrganizationDraft {
    /**
     * The organization key (must be unique)
     * @type {string}
     * @memberof OrganizationDraft
     */
    key: string;
    /**
     * The name of the organization
     * @type {string}
     * @memberof OrganizationDraft
     */
    name: string;
}

/**
 * Check if a given object implements the OrganizationDraft interface.
 */
export function instanceOfOrganizationDraft(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "key" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function OrganizationDraftFromJSON(json: any): OrganizationDraft {
    return OrganizationDraftFromJSONTyped(json, false);
}

export function OrganizationDraftFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrganizationDraft {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'key': json['key'],
        'name': json['name'],
    };
}

export function OrganizationDraftToJSON(value?: OrganizationDraft | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'key': value.key,
        'name': value.name,
    };
}

