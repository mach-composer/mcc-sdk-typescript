/* tslint:disable */
/* eslint-disable */
/**
 * MACH composer Cloud (MCC) Public API
 * # Introduction  MACH composer Cloud is a platform and API to facilitate and coordinate work across teams that build composable architectures using MACH technology.  All operations available in MACH composer cloud are available through this API. For more information about using it in your MACH architecture, have a look at the [documentation website](https://docs.machcomposer.io/cloud/index.html). 
 *
 * The version of the OpenAPI document: 0.1.0
 * Contact: mach@labdigital.nl
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProjectAllOf
 */
export interface ProjectAllOf {
    /**
     * The organization key (must be unique)
     * @type {string}
     * @memberof ProjectAllOf
     */
    key: string;
    /**
     * The name of the organization
     * @type {string}
     * @memberof ProjectAllOf
     */
    name: string;
    /**
     * description about the api client
     * @type {string}
     * @memberof ProjectAllOf
     */
    description?: string;
}

/**
 * Check if a given object implements the ProjectAllOf interface.
 */
export function instanceOfProjectAllOf(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "key" in value;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function ProjectAllOfFromJSON(json: any): ProjectAllOf {
    return ProjectAllOfFromJSONTyped(json, false);
}

export function ProjectAllOfFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectAllOf {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'key': json['key'],
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
    };
}

export function ProjectAllOfToJSON(value?: ProjectAllOf | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'key': value.key,
        'name': value.name,
        'description': value.description,
    };
}

